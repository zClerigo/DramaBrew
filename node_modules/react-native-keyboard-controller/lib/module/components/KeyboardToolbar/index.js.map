{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","StyleSheet","Text","View","FocusedInputEvents","KeyboardController","useColorScheme","KeyboardStickyView","Arrow","Button","colors","TEST_ID_KEYBOARD_TOOLBAR","TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS","TEST_ID_KEYBOARD_TOOLBAR_NEXT","TEST_ID_KEYBOARD_TOOLBAR_CONTENT","TEST_ID_KEYBOARD_TOOLBAR_DONE","KEYBOARD_TOOLBAR_HEIGHT","DEFAULT_OPACITY","KeyboardToolbar","content","theme","doneText","button","icon","showArrows","onNextCallback","onPrevCallback","onDoneCallback","blur","opacity","offset","closed","opened","enabled","rest","colorScheme","inputs","setInputs","current","count","isPrevDisabled","isNextDisabled","subscription","addListener","e","remove","doneStyle","styles","doneButton","color","primary","toolbarStyle","toolbar","backgroundColor","background","ButtonContainer","IconContainer","onPressNext","event","isDefaultPrevented","setFocusTo","onPressPrev","onPressDone","dismiss","createElement","_extends","style","testID","Fragment","accessibilityHint","accessibilityLabel","disabled","onPress","type","flex","rippleRadius","doneButtonContainer","maxFontSizeMultiplier","create","position","bottom","alignItems","width","flexDirection","height","paddingHorizontal","fontWeight","fontSize","marginRight","DefaultKeyboardToolbarTheme"],"sources":["index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport { FocusedInputEvents } from \"../../bindings\";\nimport { KeyboardController } from \"../../module\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport KeyboardStickyView from \"../KeyboardStickyView\";\n\nimport Arrow from \"./Arrow\";\nimport Button from \"./Button\";\nimport { colors } from \"./colors\";\n\nimport type { HEX, KeyboardToolbarTheme } from \"./types\";\nimport type { KeyboardStickyViewProps } from \"../KeyboardStickyView\";\nimport type { ReactNode } from \"react\";\nimport type { GestureResponderEvent, ViewProps } from \"react-native\";\n\nexport type KeyboardToolbarProps = Omit<\n  ViewProps,\n  \"style\" | \"testID\" | \"children\"\n> & {\n  /** An element that is shown in the middle of the toolbar. */\n  content?: JSX.Element | null;\n  /** A set of dark/light colors consumed by toolbar component. */\n  theme?: KeyboardToolbarTheme;\n  /** Custom text for done button. */\n  doneText?: ReactNode;\n  /** Custom touchable component for toolbar (used for prev/next/done buttons). */\n  button?: typeof Button;\n  /** Custom icon component used to display next/prev buttons. */\n  icon?: typeof Arrow;\n  /**\n   * Whether to show next and previous buttons. Can be useful to set it to `false` if you have only one input\n   * and want to show only `Done` button. Default to `true`.\n   */\n  showArrows?: boolean;\n  /**\n   * A callback that is called when the user presses the next button along with the default action.\n   */\n  onNextCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the previous button along with the default action.\n   */\n  onPrevCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the done button along with the default action.\n   */\n  onDoneCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A component that applies blur effect to the toolbar.\n   */\n  blur?: JSX.Element | null;\n  /**\n   * A value for container opacity in hexadecimal format (e.g. `ff`). Default value is `ff`.\n   */\n  opacity?: HEX;\n} & Pick<KeyboardStickyViewProps, \"offset\" | \"enabled\">;\n\nconst TEST_ID_KEYBOARD_TOOLBAR = \"keyboard.toolbar\";\nconst TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS = `${TEST_ID_KEYBOARD_TOOLBAR}.previous`;\nconst TEST_ID_KEYBOARD_TOOLBAR_NEXT = `${TEST_ID_KEYBOARD_TOOLBAR}.next`;\nconst TEST_ID_KEYBOARD_TOOLBAR_CONTENT = `${TEST_ID_KEYBOARD_TOOLBAR}.content`;\nconst TEST_ID_KEYBOARD_TOOLBAR_DONE = `${TEST_ID_KEYBOARD_TOOLBAR}.done`;\n\nconst KEYBOARD_TOOLBAR_HEIGHT = 42;\nconst DEFAULT_OPACITY: HEX = \"FF\";\n\n/**\n * `KeyboardToolbar` is a component that is shown above the keyboard with `Prev`/`Next` and\n * `Done` buttons.\n */\nconst KeyboardToolbar: React.FC<KeyboardToolbarProps> = ({\n  content,\n  theme = colors,\n  doneText,\n  button,\n  icon,\n  showArrows = true,\n  onNextCallback,\n  onPrevCallback,\n  onDoneCallback,\n  blur = null,\n  opacity = DEFAULT_OPACITY,\n  offset: { closed = 0, opened = 0 } = {},\n  enabled = true,\n  ...rest\n}) => {\n  const colorScheme = useColorScheme();\n  const [inputs, setInputs] = useState({\n    current: 0,\n    count: 0,\n  });\n  const isPrevDisabled = inputs.current === 0;\n  const isNextDisabled = inputs.current === inputs.count - 1;\n\n  useEffect(() => {\n    const subscription = FocusedInputEvents.addListener(\"focusDidSet\", (e) => {\n      setInputs(e);\n    });\n\n    return subscription.remove;\n  }, []);\n  const doneStyle = useMemo(\n    () => [styles.doneButton, { color: theme[colorScheme].primary }],\n    [colorScheme, theme],\n  );\n  const toolbarStyle = useMemo(\n    () => [\n      styles.toolbar,\n      {\n        backgroundColor: `${theme[colorScheme].background}${opacity}`,\n      },\n    ],\n    [colorScheme, opacity, theme],\n  );\n  const offset = useMemo(\n    () => ({ closed: closed + KEYBOARD_TOOLBAR_HEIGHT, opened }),\n    [closed, opened],\n  );\n  const ButtonContainer = button || Button;\n  const IconContainer = icon || Arrow;\n\n  const onPressNext = useCallback(\n    (event: GestureResponderEvent) => {\n      onNextCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.setFocusTo(\"next\");\n      }\n    },\n    [onNextCallback],\n  );\n  const onPressPrev = useCallback(\n    (event: GestureResponderEvent) => {\n      onPrevCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.setFocusTo(\"prev\");\n      }\n    },\n    [onPrevCallback],\n  );\n  const onPressDone = useCallback(\n    (event: GestureResponderEvent) => {\n      onDoneCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.dismiss();\n      }\n    },\n    [onDoneCallback],\n  );\n\n  return (\n    <KeyboardStickyView enabled={enabled} offset={offset}>\n      <View {...rest} style={toolbarStyle} testID={TEST_ID_KEYBOARD_TOOLBAR}>\n        {blur}\n        {showArrows && (\n          <>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the previous field\"\n              accessibilityLabel=\"Previous\"\n              disabled={isPrevDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS}\n              theme={theme}\n              onPress={onPressPrev}\n            >\n              <IconContainer\n                disabled={isPrevDisabled}\n                theme={theme}\n                type=\"prev\"\n              />\n            </ButtonContainer>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the next field\"\n              accessibilityLabel=\"Next\"\n              disabled={isNextDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_NEXT}\n              theme={theme}\n              onPress={onPressNext}\n            >\n              <IconContainer\n                disabled={isNextDisabled}\n                theme={theme}\n                type=\"next\"\n              />\n            </ButtonContainer>\n          </>\n        )}\n\n        <View style={styles.flex} testID={TEST_ID_KEYBOARD_TOOLBAR_CONTENT}>\n          {content}\n        </View>\n        <ButtonContainer\n          accessibilityHint=\"Closes the keyboard\"\n          accessibilityLabel=\"Done\"\n          rippleRadius={28}\n          style={styles.doneButtonContainer}\n          testID={TEST_ID_KEYBOARD_TOOLBAR_DONE}\n          theme={theme}\n          onPress={onPressDone}\n        >\n          <Text maxFontSizeMultiplier={1.3} style={doneStyle}>\n            {doneText || \"Done\"}\n          </Text>\n        </ButtonContainer>\n      </View>\n    </KeyboardStickyView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flex: {\n    flex: 1,\n  },\n  toolbar: {\n    position: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: KEYBOARD_TOOLBAR_HEIGHT,\n    paddingHorizontal: 8,\n  },\n  doneButton: {\n    fontWeight: \"600\",\n    fontSize: 15,\n  },\n  doneButtonContainer: {\n    marginRight: 8,\n  },\n});\n\nexport { colors as DefaultKeyboardToolbarTheme };\nexport default KeyboardToolbar;\n"],"mappings":"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","ignoreList":[]}